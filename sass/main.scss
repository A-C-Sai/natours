/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* 

- clip-path : ploygon(x y, x y, x y, x y) ---> specifying a polygon in which the image or element will still be visible. x = x-axis (points to right), y = y-axis (points downwards); reference point is top left corner; specificy coordinated in clock-wise direction. https://bennettfeely.com/clippy/


- Two types of animations in CSS;
    1. transition property
    2. @keyframes ---> for browser performance advised to ever animate only 2 different properties (opacity & transform)
        - not restricited to page loads, can also set it to happen on certain states e.g. hover

        - animation (short-hand property)
            - animation-name
            - animation-duration
            - animation-timing-function
            - animation-delay
        - animation-iteration-count
        - animation-fill-mode ------> with value as backwards, it automatically adds the styles of the 0% b4 animation starts, useful when we are using it with animation-delay property
    
    - backface-visibility ---> fixes shaky animation

- inline-block elements are treated as if they were text, can center them using text-align property

- letter-spacing can create complications with alignment, how to slove?

e.g. .btn:hover::after ---> when btn is hovered add styles to after pseudo element
*/

$color-primary: #7ed56f;
$color-primary-light: #55c57a;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;

*,
*::before,
*::after {
  padding: 0;
  margin: 0;
  box-sizing: inherit;
}

html {
  /* root font-size is set in the html element */
  font-size: 62.5%;
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgb($color-primary-dark, 0.8)),
    url('../img/hero.jpg');
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  margin-bottom: 6rem;
}
.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 6rem;
  animation-name: moveInLeft;
  animation-duration: 0.5s;
  animation-timing-function: ease-out;
}
.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation-name: moveInRight;
  animation-duration: 0.5s;
  /* slower towards the end */
  animation-timing-function: ease-out;
}

@keyframes moveInLeft {
  /* BEFOR ANIMATION STARTS */
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  /* END OF ANIMATION */
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

.btn:link,
.btn:visited {
  display: inline-block;
  text-decoration: none;
  text-transform: uppercase;
  padding: 1.5rem 3rem;
  border-radius: 100rem;
  transition: all 0.5s;
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 0.3rem 0.3rem rgba(0, 0, 0, 0.296);
}

.btn:active {
  transform: translateY(0.3rem);
  box-shadow: none;
}

.btn--white {
  color: $color-grey-dark;
  background-color: $color-white;
}

@keyframes moveInDown {
  /* BEFOR ANIMATION STARTS */
  0% {
    opacity: 0;
    transform: translateY(5rem);
  }

  /* END OF ANIMATION */
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.btn--animated {
  animation-name: moveInDown;
  animation-duration: 0.3s;
  /* slower towards the end */
  animation-timing-function: ease-out;
  animation-delay: 0.5s;
  animation-fill-mode: backwards;
}
